{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b1e6b58.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/create'>New Project</NavLink></li>\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n        {props.profile.initials}\n      </NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS' });\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_ERROR', err });\n    });\n\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS'});\n    });\n  }\n}\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase.auth().createUserWithEmailAndPassword(\n      newUser.email,\n      newUser.password\n    ).then((resp) => {\n      return firestore.collection('users').doc(resp.user.uid).set({\n        firstName: newUser.firstName,\n        lastName: newUser.lastName,\n        initials: newUser.firstName[0] + newUser.lastName[0]\n      })\n    }).then(() => {\n      dispatch({ type: 'SIGNUP_SUCCESS' })\n    }).catch(err => {\n      dispatch({ type: 'SIGNUP_ERROR', err })\n    })\n  }\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/signup'>Signup</NavLink></li>\n      <li><NavLink to='/signin'>Log In</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const { auth, profile } = props\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Mario Plan</Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n  return (\n    <div className=\"section\">\n      <div className='card z-depth-0'>\n        <div className='card-content'>\n          <span className='card-title'>Notifications</span>\n          <ul className=\"notifications\">\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment';\n\nconst ProjectSummary = ({project}) => {\n  return(\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n\n  )\n}\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) => {\n  return(\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id } key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  render() {\n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects}/>\n            </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to='/signin' />\n\n  if (project) {\n    return(\n    <div className=\"container section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">{ project.title }</span>\n          <p>{ project.content }\n          </p>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\">\n          <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n          <div>{moment(project.createdAt.toDate()).calendar()}</div>\n        </div>\n      </div>\n    </div>\n  )\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n  render() {\n    const { authError, auth } =this.props;\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state)\n  }\n  render() {\n    const { auth, authError } =this.props;\n    if (auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","export const createProject = (project) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT', project });\n    }).catch((err) => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n    })\n\n  }\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state)\n    this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch(action.type){\n    case 'LOGIN_ERROR':\n      console.log('login error');\n      return {\n        ...state,\n        authError: 'Login failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return {\n        ...state,\n        authError: null\n    }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state\n    case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      console.log('signup error');\n      return {\n        ...state,\n        authError: action.err.message\n      }\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n  ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('created project', action.project);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n    console.log('create project error', action.err);\n    return state;\n  default:\n      return state;\n  }\n}\n\nexport default projectReducer;\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nvar config = {\n    apiKey: \"AIzaSyDGiH7itBKBQhhYrd8Rse2RO6GFv89j1Mo\",\n    authDomain: \"net-ninja-mario-plan-ce995.firebaseapp.com\",\n    databaseURL: \"https://net-ninja-mario-plan-ce995.firebaseio.com\",\n    projectId: \"net-ninja-mario-plan-ce995\",\n    storageBucket: \"\",\n    messagingSenderId: \"9512208821\",\n    appId: \"1:9512208821:web:013c4840fd841b7a01b1fc\",\n    measurementId: \"G-PYHZV8ME1X\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n   applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n   reduxFirestore(fbConfig),\n   reactReduxFirebase(fbConfig, {useFirestoreForProfile: true,userProfile: 'users', attachAuthIsReady: true})\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n})\n"],"sourceRoot":""}